<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="utf-8">
        <link rel="stylesheet" media="all" href="../dist/editoria11y.min.css">
        <title>Live Editing Tests</title>
    </head>
<body>
    <header>
        <h1 id="editoria11y-demo">Live editing prototype</h1>
    </header>
    <main>

        <section id="editable-region" contenteditable="true" style="max-height: 36em; overflow-y: auto; width: calc(100% - 5rem); padding: 10px 2.5rem; margin: 1rem 0 5rem; box-shadow: 0px 0px 0 1px #777, inset 1px 1px 3px; border-radius: 3px;">

            <h2>Editable Regions</h2>
            <img style="float: right; width: 50%;" class='click-in-css' src="data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 240 120'%3E%3Crect width='240' height='120' fill='%23cccccc'%3E%3C/rect%3E%3Ctext x='50%25' y='50%25' dominant-baseline='middle' text-anchor='middle' font-family='monospace' font-size='26px' fill='%23333333'%3EImage%3C/text%3E%3C/svg%3E"><p>Floating image:</p>
            <p>This is a big paragraph with a big link. <a href="#">https://This link is going to wrap on to a lot of lines because it has a lot of text, and it is going to trip the https test.</a> We don't have much more to say about that.</p>
            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum</p>
            <p>This is a big paragraph with a some small links. <a href="#">https://small link.</a> This is a big paragraph with a some small links. <a href="#">https://small link.</a> This is a big paragraph with a some small links. <a href="#">https://small link.</a></p>
            <p><a href="#">https://This link is going to wrap on to a lot of lines because it has a lot of text, and it is going to trip the https test.</a></p>
                <ul><li><a href>stack positioning</a></li><li><a href>click here</a></li><li><a href>click here</a></li><li><a href>click here</a></li><li><a href>an ok one</a></li><li><a href>this is fine</a></li></ul>
            <div class="posi"><h4 id="a-very-long-heading">Suspiciously long heading. Headings should not be used for emphasis, but rather for a document outline, so if you find yourself talking this much, this probably is being used for visual formatting, not a heading.</h4>
            </div>
            <p><a href="#">https://This link is going to wrap on to a lot of lines because it has a lot of text, and it is going to trip the https test.</a></p>
            <h2 id="tables">Tables</h2>

            <h3 id="tables-without-valid-headers">Tables without valid headers</h3>

            <table class="posi"><tbody><tr><td>A table without a TH header is invalid</td><td class="posi"><h4 >Outline headers do not count</h4></td><td class="negati"><p><strong>Disable should be content header test inside tables</strong></p></td></tr></tbody></table>

            <table class="negati" role="presentation"><tr><td>No table header, but table has role="presentation."</td></tr></table>

            <table class="negati"><thead>
            <tr>
                <th><p>Numbers in tables</p></th>
                <th><p>Should not be checked for lists</p>
                </th>
            </tr>
            </thead>
                <tbody>
                <tr>
                    <th>   <p>1.</p>
                    </th>
                    <td>   <p>2. Turtles</p>
                    </td>
                </tr>
                <tr>
                    <th>   <p>2.</p>
                    </th>
                    <td>   <p>Bears</p>
                    </td>

                </tr>
                </tbody>
            </table>
            <h3 id="empty-table-header-cells">Empty table header cells</h3>

            <table><tbody><tr><th>Empty table heading cells will also be flagged:</th><th class="posi"> &nbsp;</th></tr></tbody></table>


        </section>
        <script src="tinymce/js/tinymce/tinymce.min.js" referrerpolicy="origin"></script>
        <script>tinymce.init({
          selector: '#editable-region',  // change this value according to your HTML
          license_key: 'gpl',
          inline: true,
        });

        </script>

        <section id="not-editable-region" contenteditable="false">

            <h2>Non-editable Regions</h2>
            <p><a href="#">https://This link is going to wrap on to a lot of lines because it has a lot of text, and it is going to trip the https test.</a></p>
            <div>
                <ul><li><a href>stack positioning</a></li><li><a href>click here</a></li><li><a href>click here</a></li><li><a href>click here</a></li><li><a href>click here</a></li><li><a href>click here</a></li></ul>
            </div>


        </section>

        <section id="Custom tests" contenteditable="true">
            <h2 id="customtest">Custom tests</h2>
            <p class="posi">
                <a href="https://nam12.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwds.princeton.edu%2F">Safelink</a>
            </p>
        </section>




        <div hidden>
            <link href="./tests.css" rel="stylesheet">
            <script src="../js/ed11y-localization.js"></script>
            <script src="../js/ed11y-element-panel.js"></script>
            <script src="../js/ed11y-element-result.js"></script>
            <script src="../js/ed11y-element-tip.js"></script>
            <script src="../js/ed11y-element-alt.js"></script>
            <script src="../js/ed11y-test-links.js"></script>
            <script src="../js/ed11y-test-images.js"></script>
            <script src="../js/ed11y-test-headings.js"></script>
            <script src="../js/ed11y-test-text.js"></script>
            <script src="../js/ed11y-test-embeds.js"></script>
            <script src="../js/ed11y.js"></script>
            <!-- Instantiate-->
            <script>
                document.addEventListener('ed11yShowHidden', function(e) {
                    console.log('Event dispatched: ed11yShowHidden for #' + e.detail.result);
                    let pop = Ed11y.findElements('hiddenPop',`#ed11y-result-${e.detail.result}`);
                    Ed11y.elements['hiddenPop'][0].closest('[hidden]')?.removeAttribute('hidden');
                }, false);

                const decodeSafelink = function(url) {
                    const params = new URL(url).searchParams;
                    let decoded = params.get('url');
                    if (!!decoded) {
                        decoded = Ed11y.sanitizeForHTML(decoded);
                        return `<p>The actual URL may be:<br><em style='word-wrap: break-word;'>${decoded}</em></p>`
                    }
                    return '';
                }
                document.addEventListener('ed11yRunCustomTests', function() {
                    Ed11y.findElements('safeLinks','a[href*="safelinks.protection.outlook.com/?"]');
                    Ed11y.M.outlookSafeLink = {
                        title: 'URL is an Outlook Safelink',
                        tip: (href) =>
                            `<p>The URL for this link has been copied from an email, and will bounce all clicks through the Microsoft Safelinks server.</p>
                            <p>The specified URL is:<br><em style='word-break: break-all;'>${Ed11y.sanitizeForHTML(href)}</em></p>
                            ${decodeSafelink(href)}
                                `,
                    };
                    Ed11y.elements.safeLinks?.forEach((el) => {
                        Ed11y.results.push({
                            element: el,
                            test: 'outlookSafeLink',
                            content: Ed11y.M.outlookSafeLink.tip(el.getAttribute('href')),
                            position: 'beforebegin',
                            dismissalKey: false,
                        })
                    })
                    let allDone = new CustomEvent('ed11yResume');
                    document.dispatchEvent(allDone);
                    document.dispatchEvent(allDone);
                    })


                const ed11y = new Ed11y({
                    alertMode : 'assertive',
                    ignoreByKey : {
                        'img': '[aria-hidden], [aria-hidden] img', // disable alt text tests on aria-hidden images by default
                        'a': '[aria-hidden][tabindex]', // disable link text check on properly disabled links
                    },
                    ignoreElements: '.tox-editor-header *',
                    shadowComponents : 'shadow-test, shadow-test-no-hits',
                    hiddenHandlers : '[hidden]',
                    //inlineAlerts : false,
                    checkRoots : 'body',
                    linkIgnoreStrings: '\(link is external\)',
                    customTests : 2,
                    theme: 'sleekTheme',
                    linkIgnoreSelector : '.ignore-class',
                });
            </script>

        </div>
    </main>




</body>

</html>
