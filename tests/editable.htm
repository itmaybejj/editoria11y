<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="utf-8">
        <link rel="stylesheet" media="all" href="../dist/editoria11y.min.css">
        <title>Editorially Utility Functions</title>
    </head>
<body>
    <header>
        <h1 id="editoria11y-demo">Editoria11y Utility Functions</h1>
    </header>
    <main>

        <section id="editable-region" contenteditable="true" style="max-height: 10em; overflow-y: auto; width: calc(100%-5rem); padding: 0 2.5rem; outline: 1px solid;">

            <h2>Editable Regions</h2>
            <p><a href="#">https://This link is going to wrap on to a lot of lines because it has a lot of text, and it is going to trip the https test.</a></p>
            <p><a href="#">https://This link is going to wrap on to a lot of lines because it has a lot of text, and it is going to trip the https test.</a></p>
            <p><a href="#">https://This link is going to wrap on to a lot of lines because it has a lot of text, and it is going to trip the https test.</a></p>
            <p><a href="#">https://This link is going to wrap on to a lot of lines because it has a lot of text, and it is going to trip the https test.</a></p>
            <div>
                <ul><li><a href>stack positioning</a></li><li><a href>click here</a></li><li><a href>click here</a></li><li><a href>click here</a></li><li><a href>click here</a></li><li><a href>click here</a></li></ul>
            </div>


        </section>
        <section id="not-editable-region" contenteditable="false">

            <h2>Non-editable Regions</h2>
            <p><a href="#">https://This link is going to wrap on to a lot of lines because it has a lot of text, and it is going to trip the https test.</a></p>
            <div>
                <ul><li><a href>stack positioning</a></li><li><a href>click here</a></li><li><a href>click here</a></li><li><a href>click here</a></li><li><a href>click here</a></li><li><a href>click here</a></li></ul>
            </div>


        </section>

        <section id="Custom tests" contenteditable="true">
            <h2 id="customtest">Custom tests</h2>
            <div class="positive">
                <a href="https://nam12.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwds.princeton.edu%2F">Safelink</a>
            </div>
        </section>

        <section id="Exclusions">

            <h2>Exclusions</h2>
            <div class="utility">
                <h4 style="background: silver; padding: 1em; font-size: 14px;">This editor-only utility heading will be skipped in the outline</h4>
            </div>

            <h3>Accessible name calculation in outline excluding hidden text <noscript>No script</noscript><style>.css-example {display: block;}</style>
                <span class="prefix-icon">
                  <svg role="presentation" aria-hidden="true" id="Layer_1" data-name="Layer 1"
                    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 25.01 23.51">
                    <defs>
                      <style>.cls-1{fill:#a91e22;}.cls-2{fill:#c2c2c2;}</style>
                    </defs>
                    <title>double-arrow</title>
                    <polygon class="cls-1"
                      points="14.42 11.75 11.76 9.08 11.75 9.08 2.67 0 0 2.67 9.08 11.75 0 20.84 2.67 23.51 11.75 14.42 11.76 14.42 14.42 11.76 14.42 11.75 14.42 11.75"></polygon>
                    <polygon class="cls-2"
                      points="25.01 11.75 22.34 9.08 22.34 9.08 13.25 0 10.58 2.67 19.67 11.75 10.58 20.84 13.25 23.51 22.34 14.42 22.34 14.42 25.01 11.76 25.01 11.75 25.01 11.75"></polygon>
                  </svg>
                </span>
              </h3>

            <h3>Link with ignored text</h3>
            <div class="positive">
                <a href="#foo">Click here <span class="ignore-class">ignoreme</span></a>
            </div>

            <h3>Aria:hidden image</h3>
            <div class="negative"><div aria-hidden="true">
                <img alt="" src="data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 240 120'%3E%3Crect width='240' height='120' fill='%23cccccc'%3E%3C/rect%3E%3Ctext x='50%25' y='50%25' dominant-baseline='middle' text-anchor='middle' font-family='monospace' font-size='26px' fill='%23333333'%3EImage%3C/text%3E%3C/svg%3E" >
            </div></div>

            <div class="positive"><h4 id="a-very-long-heading">Suspiciously long heading. Headings should not be used for emphasis, but rather for a document outline, so if you find yourself talking this much, this probably is being used for visual formatting, not a heading.</h4>
            </div>
        </section>

        <section id="hidden results">
            <details>
                <summary>oh hi</summary>
                <a href="#">Click here</a>
            </details>

            <div class="positive" style="width: 1em; height: 1em; overflow: hidden;">
                <h4 style="background: silver; padding: 1em; font-size: 14px;">This editor-only utility heading will be skipped in the outline</h4>
            </div>
            <div style="visibility: hidden; position: absolute; top: -10000px">
                Hidden issue.
                <a href="#" hidden>Click here</a>
            </div>
        </section>

        <section id="Hidden tips">

            <h2 id="hiding-tests">Hidden element handlers</h2>

            <h3>Display:none</h3>
            <div class="negative"><div style="display: none;"><h6 id="this-h6-should-have-been-an-h3">Skipped heading level</h6></div></div>

            <h3>Visibility:hidden</h3>
            <div class="negative"><div style="visibility: hidden;"><h6 id="this-h6-should-have-been-an-h3">Skipped heading level</h6></div></div>

            <h3>Aria:hidden text</h3>
            <div class="negative"><div style="visibility: hidden;"><h6 id="this-h6-should-have-been-an-h3">Skipped heading level</h6></div></div>

            <h3>HTML hidden attribute</h3>
            <div class="negative"><div hidden><h6 id="this-h6-should-have-been-an-h3">Skipped heading level</h6></div></div>

            <h3>Hidden click here links</h3>
            <div class="positive"><div style="display: none;"><a id="visually-hidden-click-here" href="#">Click here</a></div></div>
            <div class="positive"><div style="visibility: hidden;"><a id="visually-hidden-click-here" href="#">Click here</a></div></div>
            <div class="positive"><div hidden><a id="hidden-click-here" href="#">Click here</a></div></div>

        </section>

        <section id="name-calculation" >

            <h2 id="namecalc">Accessible name calculation</h2>

            <h3>Pseudo selectors in a link</h3>
            <div class="positive">Link with SVG image with multiple labels, one should be ignored:
                <a href="https://www.princeton.edu" >click <span class="extlink-nobreak">here<svg focusable="false" class="ext" role="img" aria-label="(link is external)" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 80 40"><metadata><sfw xmlns="http://ns.adobe.com/SaveForWeb/1.0/"><slicesourcebounds y="-8160" x="-8165" width="16389" height="16384" bottomleftorigin="true"></slicesourcebounds><optimizationsettings><targetsettings targetsettingsid="0" fileformat="PNG24Format"><png24format transparency="true" filtered="false" interlaced="false" nomattecolor="false" mattecolor="#FFFFFF"></png24format></targetsettings></optimizationsettings></sfw></metadata><title>(link is external)</title><path d="M48 26c-1.1 0-2 0.9-2 2v26H10V18h26c1.1 0 2-0.9 2-2s-0.9-2-2-2H8c-1.1 0-2 0.9-2 2v40c0 1.1 0.9 2 2 2h40c1.1 0 2-0.9 2-2V28C50 26.9 49.1 26 48 26z"></path><path d="M56 6H44c-1.1 0-2 0.9-2 2s0.9 2 2 2h7.2L30.6 30.6c-0.8 0.8-0.8 2 0 2.8C31 33.8 31.5 34 32 34s1-0.2 1.4-0.6L54 12.8V20c0 1.1 0.9 2 2 2s2-0.9 2-2V8C58 6.9 57.1 6 56 6z"></path></svg></span></a></div>
            <div class="negative">Good link text in ::before: <a id="text-in-css" href="#"></a></div>
            <div class="positive">Bad link text in ::before:<a id="click-in-css" class="click-in-css" href="#"></a></div>
            <div class="negative">Good link text in title attribute: <a id="titled-link" title="Titled link" href="#"></a></div>
            <div class="positive">Bad link text in title attribute: <a id="titled-link-click-here" title="Click here" href="#"><span></span></a></div>
            <div class="positive">Bad link text in ::before on inner span: <a id="inner-css-link" href="#"><span class="click-in-css"></span></a></div>
            <div class="positive">Inner SVG has an alt but no role, alt is ignored: <a id="svg-incorrect-role" href="#"><svg alt="unread alt" viewBox="0 0 20 10" xmlns="http://www.w3.org/2000/svg">
                <circle cx="5" cy="5" r="4"></circle></svg></a></div>
            <div class="negative">Inner SVG has an alt and a valid role: <a id="svg-image-role" href="#"><svg role="image" alt="foo bar baz" viewBox="0 0 20 10" xmlns="http://www.w3.org/2000/svg">
                <circle cx="5" cy="5" r="4"></circle></svg></a></div>
            <div class="negative">Inner SVG has a good title element: <a id="inner-svg-titles" href="#"><svg viewBox="0 0 20 10" xmlns="http://www.w3.org/2000/svg">
                <circle cx="5" cy="5" r="4"><title>I'm a circle</title></circle>
                <rect x="11" y="1" width="8" height="8"><title>I'm a square</title></rect></svg></a></div>
            <div class="positive">Inner SVG has a bad title element: <a id="inner-svg-titles-click-here" href="#"><svg viewBox="0 0 20 10" xmlns="http://www.w3.org/2000/svg">
                <circle cx="5" cy="5" r="4"><title>Click</title></circle>
                <rect x="11" y="1" width="8" height="8"><title>here</title></rect></svg></a></div>
            <div class="negative">OK via aria-labelledby to another element: <a id="inner-svg-titles-ok-by-label" aria-labelledby="titled-link" href="#"><svg viewBox="0 0 20 10" xmlns="http://www.w3.org/2000/svg">
                <circle cx="5" cy="5" r="4"><title>Click</title></circle>
                <rect x="11" y="1" width="8" height="8"><title>here</title></rect></svg></a></div>
            <div class="positive">Bad via recursive aria-labelledby: <a id="recursive-svg-click-here" aria-labelledby="recursive-svg-click-here click-in-css" href="#"><svg viewBox="0 0 20 10" xmlns="http://www.w3.org/2000/svg">
                <circle cx="5" cy="5" r="4"><title>Click</title></circle>
                </svg> here</a></div>
            <div class="negative">Good via inner aria-labelled element: <a id="recursive-svg-inner-label" aria-labelledby="recursive-svg-inner-label" href="#"><svg aria-label="meaningful link" viewBox="0 0 20 10" xmlns="http://www.w3.org/2000/svg">
                <circle cx="5" cy="5" r="4"><title>Click</title></circle></svg> Here</a></div>
            <div class="positive">Bad because IMG tag cannot have a ::before: <img class='click-in-css' src="data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 240 120'%3E%3Crect width='240' height='120' fill='%23cccccc'%3E%3C/rect%3E%3Ctext x='50%25' y='50%25' dominant-baseline='middle' text-anchor='middle' font-family='monospace' font-size='26px' fill='%23333333'%3EImage%3C/text%3E%3C/svg%3E"></div>

            <style>svg {max-width: 100px;} #text-in-css::before {content: 'hello';} .click-in-css::before {content: 'click';} #click-in-css::after {content: ' here';}</style>

        </section>

        <div hidden>
            <link href="./tests.css" rel="stylesheet">
            <script src="../js/ed11y-localization.js"></script>
            <script src="../js/ed11y-element-panel.js"></script>
            <script src="../js/ed11y-element-result.js"></script>
            <script src="../js/ed11y-element-tip.js"></script>
            <script src="../js/ed11y-element-alt.js"></script>
            <script src="../js/ed11y-test-links.js"></script>
            <script src="../js/ed11y-test-images.js"></script>
            <script src="../js/ed11y-test-headings.js"></script>
            <script src="../js/ed11y-test-text.js"></script>
            <script src="../js/ed11y-test-embeds.js"></script>
            <script src="../js/ed11y.js"></script>
            <!-- Instantiate-->
            <script>
                document.addEventListener('ed11yShowHidden', function(e) {
                    console.log('Event dispatched: ed11yShowHidden for #' + e.detail.result);
                    let pop = Ed11y.findElements('hiddenPop',`#ed11y-result-${e.detail.result}`);
                    Ed11y.elements['hiddenPop'][0].closest('[hidden]')?.removeAttribute('hidden');
                }, false);

                const decodeSafelink = function(url) {
                    const params = new URL(url).searchParams;
                    let decoded = params.get('url');
                    if (!!decoded) {
                        decoded = Ed11y.sanitizeForHTML(decoded);
                        return `<p>The actual URL may be:<br><em style='word-wrap: break-word;'>${decoded}</em></p>`
                    }
                    return '';
                }
                document.addEventListener('ed11yRunCustomTests', function() {
                    Ed11y.findElements('safeLinks','a[href*="safelinks.protection.outlook.com/?"]');
                    Ed11y.M.outlookSafeLink = {
                        title: 'URL is an Outlook Safelink',
                        tip: (href) =>
                            `<p>The URL for this link has been copied from an email, and will bounce all clicks through the Microsoft Safelinks server.</p>
                            <p>The specified URL is:<br><em style='word-break: break-all;'>${Ed11y.sanitizeForHTML(href)}</em></p>
                            ${decodeSafelink(href)}
                                `,
                    };
                    Ed11y.elements.safeLinks?.forEach((el) => {
                        Ed11y.results.push({
                            element: el,
                            test: 'outlookSafeLink',
                            content: Ed11y.M.outlookSafeLink.tip(el.getAttribute('href')),
                            position: 'beforebegin',
                            dismissalKey: false,
                        })
                    })
                    let allDone = new CustomEvent('ed11yResume');
                    document.dispatchEvent(allDone);
                    document.dispatchEvent(allDone);
                    })


                const ed11y = new Ed11y({
                    alertMode : 'assertive',
                    ignoreByKey : {
                        'img': '[aria-hidden], [aria-hidden] img', // disable alt text tests on aria-hidden images by default
                        'a': '[aria-hidden][tabindex]', // disable link text check on properly disabled links
                    },
                    shadowComponents : 'shadow-test, shadow-test-no-hits',
                    hiddenHandlers : '[hidden]',
                    //inlineAlerts : false,
                    checkRoots : 'body',
                    linkIgnoreStrings: '\(link is external\)',
                    customTests : 2,
                    theme: 'sleekTheme',
                    linkIgnoreSelector : '.ignore-class',
                });
            </script>

        </div>
    </main>




</body>

</html>
